<?php
/**
 * Downloads fresh project, fields, field values etc. IDs from GitHub and saves them to github_ids.php.
 *
 * !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
 * !!! Do not run this automatically, only manually                                                  !!!
 * !!! And only run this if the IDs changed on GitHub. Do not use this to reindex objects names      !!!
 * !!! Once you reindex the IDs, you will need to manually update all the automation PHP files       !!!
 * !!! to reflect the changes in the name strings.                                                   !!!
 * !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
 *
 * That's because webhook.php refers to these IDs using hardcoded string names. When
 * fields names or values are updated in GitHub, we're good because the related IDs stay
 * the same. That is, until you reindex them with this script.
 */

require_once __DIR__ . '/bootstrap.php';

function fetch_objects_ids( GitHubApi $githubApi, $project_name_fragment ) {
	$projects       = $githubApi->getProjects();
	$projects_by_id = [];
	foreach ( $projects as $project ) {
		if ( str_contains( strtolower( $project['node']['title'] ), strtolower( $project_name_fragment ) ) ) {
			$projects_by_id[ slugify($project['node']['title']) ] = $project['node']['id'];
		}
	}
	if ( count( $projects_by_id ) === 0 ) {
		throw new Exception( 'Project not found' );
	}

	$project_id = array_values( $projects_by_id )[0];

	$fields       = $githubApi->getFieldsDefinitions( $project_id );
	$fields_by_id = [];
	foreach ( $fields as $field ) {
		$fields_by_id[ slugify($field['name']) ] = [
			'id'      => $field['id'],
			'options' => [],
		];
		foreach ( $field['options'] as $option ) {
			$fields_by_id[ slugify($field['name']) ]['options'][ slugify($option['name']) ] = $option['id'];
		}
	}

	return [
		'projects'   => $projects_by_id,
		'project_id' => $project_id,
		'fields'     => $fields_by_id,
	];
}

$githubApi = new GitHubApi( getenv( 'GITHUB_TOKEN' ) );
$objectIds = fetch_objects_ids( $githubApi, 'Playground Board' );
$value = var_export( $objectIds, true );

$script = <<<PHP
<?php
/**
 * Autogenerated by reindex_github_ids.php â€“ do not change!
 */

return $value;
PHP;

file_put_contents( __DIR__ . '/github_ids.php', $script);
